
Download GIT.

Configure GIT.:
	* git config --global user.name Ademba1
	* git config --global user.email oscarademba@gmail.com
	* git config --global core.editor "code --wait" // Defalt Editor for GIT ( code = VS Code)
	* git config --global -e ( Use Editor)
	* git config --global core.autocrlf true ( true for windows, input for Mac / Linux)
	* git --config -- help ( full )
	* git --config -h ( short )


Connecting Local Folders to Github Repositories:

Step 1: Create New repository on Github.

Step 2: Open Gitbash/ Terminal / Powershell

Step 3: Change the current working directory to your local project.

Step 4:Initialize the local directory as a Git repository.

	$ git init

Step 5: Add the files in your new local repository. This stages them for the first commit.

	$ git add .

	# Adds the files in the local repository and stages them for commit. 
	# To unstage a file, use 'git reset HEAD YOUR-FILE'.

Step 6: Commit the files that you've staged in your local repository.

	$ git commit -m "Comment on what changes you have made"

	# Commits the tracked changes and prepares them to be pushed to a remote repository.
	# To remove this commit and modify the file, use 'git reset --soft HEAD~1' and commit and add the file again.

Step 7: At the top of your GitHub repository's Quick Setup page, click  to copy the remote repository URL.

	E.g https://github.com/user/file.git

Step 8: In the Command prompt, add the URL for the remote repository where your local repository will be pushed.
	
	$ git remote add origin https://github.com/user/file.git
	# Sets the new remote
	
	$ git remote -v
	# Verifies the new remote URL

Step 9: Only if you are working behind a proxy 
	
	$ git config --global http.proxy XXX.XXX.XXX.XXX:ZZ
	# where XXX.XXX.XXX.XXX is the proxy server address and ZZ is the port number of the proxy server.

Step 10: Push the changes in your local repository to GitHub.
	
	$ git push origin master
	# Pushes the changes in your local repository up to the remote repository you specified as the origin

Step 11: A pop up will appear prompting you for Github Username and Password.

And Voila!!! 
Changes have been pushed to Github
